plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'ninja.goofyahead'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Greenwich.SR2")
}

task publishDockerImage(type: Exec) {
    workingDir './'
    commandLine './scripts/docker_publish.sh', 'company-app'
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    if (project.hasProperty("kubernetes")) {
        implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes'
        implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-ribbon'
        implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-config'
    } else {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
    }
    implementation 'com.github.javafaker:javafaker:1.0.1'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}